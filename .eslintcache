[{"F:\\TTNM\\admin3\\src\\reportWebVitals.js":"1","F:\\TTNM\\admin3\\src\\tv.js":"2","F:\\TTNM\\admin3\\src\\dashboard.js":"3","F:\\TTNM\\admin3\\src\\products.js":"4","F:\\TTNM\\admin3\\src\\management-oder.js":"5","F:\\TTNM\\admin3\\src\\App.js":"6","F:\\TTNM\\admin3\\src\\Ipad.js":"7","F:\\TTNM\\admin3\\src\\posts.js":"8","F:\\TTNM\\admin3\\src\\authProvider.js":"9","F:\\TTNM\\admin3\\src\\mac.js":"10","F:\\TTNM\\admin3\\src\\type.js":"11","F:\\TTNM\\admin3\\src\\MyUrlField.js":"12","F:\\TTNM\\admin3\\src\\Iphone.js":"13","F:\\TTNM\\admin3\\src\\users.js":"14"},{"size":362,"mtime":1608445697083,"results":"15","hashOfConfig":"16"},{"size":2786,"mtime":1611229167852,"results":"17","hashOfConfig":"16"},{"size":522,"mtime":1611720015991,"results":"18","hashOfConfig":"16"},{"size":2749,"mtime":1611218957690,"results":"19","hashOfConfig":"16"},{"size":2796,"mtime":1611330763637,"results":"20","hashOfConfig":"16"},{"size":2185,"mtime":1611330403204,"results":"21","hashOfConfig":"16"},{"size":2811,"mtime":1611221391610,"results":"22","hashOfConfig":"16"},{"size":2679,"mtime":1611763943181,"results":"23","hashOfConfig":"16"},{"size":741,"mtime":1611167771064,"results":"24","hashOfConfig":"16"},{"size":2797,"mtime":1611764275808,"results":"25","hashOfConfig":"16"},{"size":451,"mtime":1611219230618,"results":"26","hashOfConfig":"16"},{"size":604,"mtime":1611164509897,"results":"27","hashOfConfig":"16"},{"size":2825,"mtime":1611220921628,"results":"28","hashOfConfig":"16"},{"size":1243,"mtime":1611198306742,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"jahu0i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\TTNM\\admin3\\src\\reportWebVitals.js",[],["65","66"],"F:\\TTNM\\admin3\\src\\tv.js",["67"],"import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst TVTitle = ({record}) => {\r\n    return <span>Mac  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst TVFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"TV\" source=\"id\" reference=\"tv\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const TVList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<TVFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"description\" />\r\n                        <ImageField source=\"img\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const TVEdit = props => (\r\n    <Edit title={<TVTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple={false} >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const TVCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"description\" />\r\n            <ImageInput source=\"img\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);",["68","69"],"F:\\TTNM\\admin3\\src\\dashboard.js",["70","71","72","73"],"import * as React from 'react'\r\nimport {Card, CardContent, CardHeader, CardMedia } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default () => (\r\n    <Card>\r\n        \r\n       \r\n        <CardHeader st title=\"ADMIN BT-STORE\" />\r\n        <img style={{textAlign: 'center'}} className=\"img\" src=\"https://icons.iconarchive.com/icons/aha-soft/free-large-boss/256/Admin-icon.png\" />\r\n        <CardContent>lorem ipsum dolor sit amet, consectetur adip</CardContent>\r\n\r\n\r\n    </Card>\r\n)","F:\\TTNM\\admin3\\src\\products.js",["74","75","76","77"],"F:\\TTNM\\admin3\\src\\management-oder.js",["78","79","80"],"import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst ManagementTitle = ({record}) => {\r\n    return <span>Mac  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst ManagementFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Management Orders\" source=\"id\" reference=\"management-order\" allowEmpty>\r\n            <SelectInput optionText=\"product\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const ManagementList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<ManagementFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"product\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"phone\" />\r\n                        <TextField source=\"address\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const ManagementEdit = props => (\r\n    <Edit title={<ManagementTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"product\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"phone\" />\r\n            <TextInput source=\"address\" />\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const ManagementCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"product\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"phone\" />\r\n            <TextInput source=\"address\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);",["81","82"],"F:\\TTNM\\admin3\\src\\App.js",["83","84","85","86"],"F:\\TTNM\\admin3\\src\\Ipad.js",["87"],"import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst IpadTitle = ({record}) => {\r\n    return <span>Iphone  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst IpadFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Iphone\" source=\"id\" reference=\"iphone\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const IpadList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<IpadFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"description\" />\r\n                        <ImageField source=\"img\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const IpadEdit = props => (\r\n    <Edit title={<IpadTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple={false} >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const IpadCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"description\" />\r\n            <ImageInput source=\"img\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","F:\\TTNM\\admin3\\src\\posts.js",[],"F:\\TTNM\\admin3\\src\\authProvider.js",["88"],"F:\\TTNM\\admin3\\src\\mac.js",["89","90"],"F:\\TTNM\\admin3\\src\\type.js",["91","92","93","94","95","96"],"F:\\TTNM\\admin3\\src\\MyUrlField.js",[],"F:\\TTNM\\admin3\\src\\Iphone.js",["97"],"F:\\TTNM\\admin3\\src\\users.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":2,"column":40,"nodeType":"105","messageId":"106","endLine":2,"endColumn":49},{"ruleId":"103","severity":1,"message":"110","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":6,"column":1,"nodeType":"113","endLine":16,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":11,"column":9,"nodeType":"116","endLine":11,"endColumn":148},{"ruleId":"103","severity":1,"message":"117","line":13,"column":5,"nodeType":"105","messageId":"106","endLine":13,"endColumn":11},{"ruleId":"103","severity":1,"message":"118","line":15,"column":17,"nodeType":"105","messageId":"106","endLine":15,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":43,"column":21,"nodeType":"121","endLine":43,"endColumn":68},{"ruleId":"103","severity":1,"message":"122","line":64,"column":7,"nodeType":"105","messageId":"106","endLine":64,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"103","severity":1,"message":"123","line":15,"column":17,"nodeType":"105","messageId":"106","endLine":15,"endColumn":27},{"ruleId":"103","severity":1,"message":"124","line":15,"column":29,"nodeType":"105","messageId":"106","endLine":15,"endColumn":39},{"ruleId":"99","replacedBy":"125"},{"ruleId":"101","replacedBy":"126"},{"ruleId":"103","severity":1,"message":"127","line":2,"column":26,"nodeType":"105","messageId":"106","endLine":2,"endColumn":37},{"ruleId":"103","severity":1,"message":"128","line":2,"column":39,"nodeType":"105","messageId":"106","endLine":2,"endColumn":50},{"ruleId":"103","severity":1,"message":"129","line":7,"column":9,"nodeType":"105","messageId":"106","endLine":7,"endColumn":21},{"ruleId":"103","severity":1,"message":"130","line":7,"column":23,"nodeType":"105","messageId":"106","endLine":7,"endColumn":35},{"ruleId":"103","severity":1,"message":"104","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"111","severity":1,"message":"131","line":1,"column":1,"nodeType":"113","endLine":26,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":86,"column":34,"nodeType":"121","endLine":86,"endColumn":43},{"ruleId":"103","severity":1,"message":"118","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":15},{"ruleId":"103","severity":1,"message":"132","line":7,"column":5,"nodeType":"105","messageId":"106","endLine":7,"endColumn":13},{"ruleId":"103","severity":1,"message":"117","line":8,"column":5,"nodeType":"105","messageId":"106","endLine":8,"endColumn":11},{"ruleId":"103","severity":1,"message":"133","line":9,"column":5,"nodeType":"105","messageId":"106","endLine":9,"endColumn":15},{"ruleId":"103","severity":1,"message":"134","line":10,"column":5,"nodeType":"105","messageId":"106","endLine":10,"endColumn":19},{"ruleId":"103","severity":1,"message":"135","line":10,"column":21,"nodeType":"105","messageId":"106","endLine":10,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":6,"column":5,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"103","severity":1,"message":"132","line":7,"column":5,"nodeType":"105","messageId":"106","endLine":7,"endColumn":13},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'ReferenceField' is defined but never used.","Identifier","unusedVar",["136"],["137"],"'CardMedia' is defined but never used.","'makeStyles' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Create' is defined but never used.","'EmailField' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PreviewImage' is assigned a value but never used.","'ImageField' is defined but never used.","'ImageInput' is defined but never used.",["136"],["137"],"'ListGuesser' is defined but never used.","'EditGuesser' is defined but never used.","'ProductsList' is defined but never used.","'ProductsEdit' is defined but never used.","Assign object to a variable before exporting as module default","'UrlField' is defined but never used.","'SimpleForm' is defined but never used.","'ReferenceInput' is defined but never used.","'TextInput' is defined but never used.","no-global-assign","no-unsafe-negation"]